@startuml

Title C4 Plant UML Example

!if (%getenv("LOCAL_EDIT_BLOG_ROOT") == "")
!$ROOT_PATH = "https://mweagle.io/posts/"
!else
' The local absolute root path (including trailing delimiter)
' to this blog content. Example: ~/Documents/Github/blog/content/posts
!$ROOT_PATH = %getenv("LOCAL_EDIT_BLOG_ROOT")
!endif
' Macro to handle local vs server references
!define INCLUDE(a,b) ##a##b

' Palette selectors
!$PALETTE_TYPE=div
!$PALETTE_NAME=RdGy
!$PALETTE_COLOR_COUNT=11

' Include the primary theme...
!include INCLUDE($ROOT_PATH, c4pumlthemes/puml/resources/c4-theme.puml)

' skinparam DefaultFontName Hasklig
' skinparam Handwritten true
' skinparam linetype ortho


' !include <tupadr3/common>
' !include <tupadr3/font-awesome/gitlab>
!include <awslib/AWSCommon>
!include <awslib/Compute/Lambda>
' Ref: https://github.com/awslabs/aws-icons-for-plantuml
'‚ùó Syntax of !include <awslib/AWSCommon.puml> uses the embedded
' plantuml-stdlib. As of the PlantUML version 1.2022.14 update,
' this includes the Release 14-2022.07.31 icon set.

'!include <awslib/InternetOfThings/IoTRule>
'!include <awslib/Analytics/KinesisDataStreams>
'!include <awslib/ApplicationIntegration/SimpleQueueService>
'
'left to right direction
'
'agent "Published Event" as event #fff
'
'IoTRule(iotRule, "Action Error Rule", "error if Kinesis fails")
'KinesisDataStreams(eventStream, "IoT Events", "2 shards")
'SimpleQueueService(errorQueue, "Rule Error Queue", "failed Rule actions")
'
'event --> iotRule : JSON message
'iotRule --> eventStream : messages
'iotRule --> errorQueue : Failed action message


Person(wat, "NICE")

Person(customer, "Personal Banking Customer")
System(banking_system, "Internet Banking System")

System_Ext(mail_system, "E-mail system")
System_Ext(mainframe, "Mainframe Banking System")
Container(containerAlias, "Label", "Technology", "Optional Description")
', $sprite="Lambda,scale=0.5"
Container_Ext(OthercontainerAlias, "Label", "OTHER Technology", "Optional Description")
Component(someComponetn, "THIS THING", "WAT")
Component_Ext(anotherComp, "THIS OTHER THING", "WAT")

Rel(customer, banking_system, "Uses")
Rel_Back(customer, mail_system, "Sends e-mails to")
Rel_Neighbor(banking_system, mail_system, "Sends e-mails")
Rel(banking_system, mainframe, "Uses")

SHOW_LEGEND()

@enduml